package com.future.lock;import java.util.concurrent.locks.Lock;import java.util.concurrent.locks.ReentrantLock;/** * @Description: * @Author: lilei58 * @Date: Created in 2022/1/5 上午7:16 */public class Main {    private static Lock lock = new ZkLock();    public static void main(String[] args) {        Thread user1 = new Thread(new UserThread(), "user1");        Thread user2 = new Thread(new UserThread(), "user2");        user1.start();        user2.start();    }    private static class UserThread implements Runnable {        @Override        public void run() {            new Order().createOrder();            boolean boolReduce = false;            // lock(): 阻塞,等待锁释放            lock.lock();            boolReduce = new Stock().reduceStock();            lock.unlock();            if (boolReduce) {                System.out.println(Thread.currentThread().getName() + " 减库存成功");                new Pay().pay();            } else {                System.out.println(Thread.currentThread().getName() + " 减库存失败");            }        }    }}