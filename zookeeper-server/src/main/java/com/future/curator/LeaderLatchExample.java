package com.future.curator;import org.apache.curator.framework.CuratorFramework;import org.apache.curator.framework.CuratorFrameworkFactory;import org.apache.curator.framework.recipes.leader.LeaderLatch;import org.apache.curator.retry.RetryNTimes;import org.apache.curator.shaded.com.google.common.collect.Lists;import java.util.List;import java.util.concurrent.TimeUnit;/** * @Description: 选举 * @Author: lilei58 * @Date: Created in 2021/11/24 上午8:08 */public class LeaderLatchExample {    public static void main(String[] args) throws Exception {        List<CuratorFramework> clientList = Lists.newArrayList();        List<LeaderLatch> latchList = Lists.newArrayList();        for (int i = 0; i < 10; i++) {            CuratorFramework client = CuratorFrameworkFactory.newClient("localhost:2181", new RetryNTimes(3, 1000));            clientList.add(client);            client.start();            LeaderLatch latch = new LeaderLatch(client, "/LeaderLatch", "client#" + i);            latchList.add(latch);            latch.start();        }        TimeUnit.SECONDS.sleep(5);        for (LeaderLatch latch : latchList) {            if (latch.hasLeadership()) {                System.out.println("当前 Leader 是: " + latch.getId());                break;            }            latch.close();        }        System.in.read();        for (CuratorFramework client : clientList) {            client.close();        }    }}